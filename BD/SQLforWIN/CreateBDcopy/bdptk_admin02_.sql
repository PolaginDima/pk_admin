/*скрипт для создания базы данных*/
/*Здесь создаются таблицы, ограничения unique, изменения таблиц ALTER TABLE*/
/*Добавляются первичные ключи PRIMARY KEY*/

/*SET AUTODDL ON/OFF - авто подтверждение операторов*/
/*commit; - после каждой команды которая должна*/
/*выполниться, подтверждение операторов*/
/*последний commit; можно отменить с помощью rollback*/
/*------------------------------------*/
/*тип ОЗУ*/
/*создаем таблицу MEMORY_TYP с первичным ключем ID*/
/*CREATE TABLE MEMORY_TIP (
ID    INTEGER NOT NULL CONSTRAINT ID_MEMORY_PRIMARY PRIMARY KEY,
NAME    VARCHAR(100) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251,
CONSTRAINT UNIQUE_MEMORY UNIQUE(NAME)
);*/
/*------------------------------------*/
/*тип процессора*/
/*создаем таблицу PROC_TYP с первичным ключем ID*/
/*CREATE TABLE PROC_TYP (
ID    INTEGER NOT NULL CONSTRAINT ID_PROC_PRIMARY PRIMARY KEY,
NAME    VARCHAR(100) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251,
CONSTRAINT UNIQUE_PROC UNIQUE(NAME)
);*/
/*------------------------------------*/
/*цвета*/
/*создаем таблицу COLOR с первичным ключем ID*/
/*CREATE TABLE COLOR (
ID    INTEGER NOT NULL CONSTRAINT ID_COLOR_PRIMARY PRIMARY KEY,
NAME    VARCHAR(30) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251,
CONSTRAINT UNIQUE_COLOR UNIQUE(NAME)
);*/
/*------------------------------------*/
/*МЕСТА - КОМНАТЫ, КОРИДОРЫ И Т.Д., т.е. места где может находиться человек, компьютер или прибор какой-то*/
/*создаем таблицу PLACE с первичным ключем ID*/
CREATE TABLE PLACE (
ID    INTEGER NOT NULL CONSTRAINT ID_PLACE_PRIMARY PRIMARY KEY,
NAME    VARCHAR(100) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
/*METKA	VARCHAR(4) CHARACTER SET WIN1251 DEFAULT 'НЕТ' NOT NULL,*/
/*DOPOLN    VARCHAR(255) CHARACTER SET WIN1251,*/
CONSTRAINT UNIQUE_PLACE UNIQUE(NAME)
);
/*------------------------------------*/
/*РАБОТНИКИ*/
/*создаем таблицу USERS с первичным ключем ID*/
CREATE TABLE USERS (
ID    INTEGER NOT NULL PRIMARY KEY,
/*CONSTRAINT ID_USER_PRIMARY PRIMARY KEY,*/
FAM     FIO NOT NULL,
NAM     FIO NOT NULL,
OTCH    FIO NOT NULL,
DTB     DATE DEFAULT CURRENT_DATE NOT NULL, /* - дата рождения/*/
/*DTP     DATE DEFAULT CURRENT_DATE NOT NULL, *//* - дата приема на работу*/
/*DTU   DATE *//*DEFAULT CURRENT_DATE*/ , /* - ДАТА УВОЛЬНЕНИЯ*/
SEX     SEX_USER NOT NULL,
PLB   VARCHAR(255) CHARACTER SET WIN1251,
PLP   VARCHAR(255) CHARACTER SET WIN1251,
/*ID_DOLJN   INTEGER NOT NULL,
ID_GROUP  INTEGER NOT NULL,*/
NET_NAME  VARCHAR(10) CHARACTER SET WIN1251 DEFAULT 'HET',
/*ID_PLACE  INTEGER NOT NULL,*/
/*DOPOLN  VARCHAR(255) CHARACTER SET WIN1251,*/
/*TAB_NOM   VARCHAR(4),*/
CONSTRAINT UNIQUE_EMPL UNIQUE(FAM,NAM,OTCH,DTB)
);

/*Ограничения уникальности*/
/*ALTER TABLE USERS*/
/*ADD CONSTRAINT UNIQUE_EMPL UNIQUE(FAM,NAM,OTCH,DTB);*/

/*создаем таблицу USERS_DOLJN с первичным ключем ID*/
CREATE TABLE USERS_DOLJN (
ID    INTEGER NOT NULL PRIMARY KEY,
NAME    VARCHAR(150) CHARACTER SET WIN1251 DEFAULT 'НЕТ' NOT NULL,
/*DOPOLN    VARCHAR(50) CHARACTER SET WIN1251,*/
CONSTRAINT UNIQUE_DOLJN UNIQUE(NAME)
);


/*ALTER TABLE USERS_DOLJN*/
/*ADD CONSTRAINT UNIQUE_DOLJN UNIQUE(NAME);*/

/*создаем таблицу USERS_GROUP с первичным ключем ID*/
CREATE TABLE USERS_GROUP (
ID    INTEGER NOT NULL CONSTRAINT ID_GROUP_PRIMARY PRIMARY KEY,
NAME    VARCHAR(30) CHARACTER SET WIN1251 DEFAULT 'НЕТ' NOT NULL,
/*DOPOLN    VARCHAR(50) CHARACTER SET WIN1251,*/
CONSTRAINT UNIQUE_GROUP UNIQUE(NAME)
);

/*ALTER TABLE USERS_GROUP*/
/*ADD CONSTRAINT UNIQUE_GROUP UNIQUE(NAME);*/

/*создаем таблицу USERS_MOVE_PL(для хранеиня изменений местоположения) с первичным ключем ID*/
/*CREATE TABLE USERS_MOVE_PL (
ID    INTEGER NOT NULL CONSTRAINT ID_USERS_MOVE_PL_PRIMARY PRIMARY KEY,
ID_USER   INTEGER NOT NULL,
ID_PLACE  INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*создаем таблицу USERS_MOVE_GR(для хранеиня изменений местоположения) с первичным ключем ID*/
/*CREATE TABLE USERS_MOVE_GR (
ID    INTEGER NOT NULL CONSTRAINT ID_USERS_MOVE_GR_PRIMARY PRIMARY KEY,
ID_USER   INTEGER NOT NULL,
ID_GROUP  INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*создаем таблицу USERS_MOVE_DLJN(для хранеиня изменений местоположения) с первичным ключем ID*/
/*CREATE TABLE USERS_MOVE_DLJN (
ID    INTEGER NOT NULL CONSTRAINT ID_USERS_MOVE_DLJN_PRIMARY PRIMARY KEY,
ID_USER   INTEGER NOT NULL,
ID_DOLJN  INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*------------------------------------*/
/*КОМПЬЮТЕРЫ(СИСТЕМНЫЕ БЛОКИ)*/
/*создаем таблицу SB с первичным ключем ID*/
/*CREATE TABLE SB (
ID    INTEGER NOT NULL CONSTRAINT ID_SB_PRIMARY PRIMARY KEY,
INVENT    VARCHAR(15) CHARACTER SET WIN1251,
SERIAL    VARCHAR(50) CHARACTER SET WIN1251 DEFAULT 'HET' NOT NULL,
DTP     DATE DEFAULT CURRENT_DATE NOT NULL, /* - дата поступления*/
/*DTI     DATE DEFAULT CURRENT_DATE NOT NULL, /* - дата изготовления*/
/*DTS   DATE, /* - ДАТА списания*/
/*OBOSNOVANIE VARCHAR(100) CHARACTER SET WIN1251,  /*Обоснование списания*/
/*LICENSE   VARCHAR(50) CHARACTER SET WIN1251 DEFAULT 'HET', /*Лицензионная наклейка*/
I/*D_MODEL  INTEGER NOT NULL,
ID_COLOR  INTEGER NOT NULL,
ID_PROC   INTEGER NOT NULL,
ID_PLACE  INTEGER NOT NULL,
ID_USER   INTEGER NOT NULL,
ID_MEMORY  INTEGER NOT NULL,
ID_STIKER INTEGER,
GARANTIA  SMALLINT DEFAULT 0 NOT NULL,
PROC_COUNT_IADRA  SMALLINT DEFAULT 1 NOT NULL,
PROC_SPEED  SMALLINT DEFAULT 1700 NOT NULL, /* - MGz*/
/*MEMORY    SMALLINT default 512 NOT NULL, /* - Mb*/
/*MEMORY_SPEED  SMALLINT DEFAULT 1700 NOT NULL, /* - MGz*/
/*DOPOLN    VARCHAR(255) CHARACTER SET WIN1251 ,
CONSTRAINT UNIQUE_SB_SERIAL UNIQUE(ID_MODEL, SERIAL),
CONSTRAINT UNIQUE_SB_INVENT UNIQUE(INVENT)
);*/


/*ALTER TABLE SB*/
/*ADD CONSTRAINT UNIQUE_SB_SERIAL UNIQUE(SERIAL),*/
/*ADD CONSTRAINT UNIQUE_SB_INVENT UNIQUE(INVENT);*/

/*создаем таблицу SB_MODEL с первичным ключем ID*/
/*CREATE TABLE SB_MODEL (
ID    INTEGER NOT NULL CONSTRAINT ID_SB_MODEL_PRIMARY PRIMARY KEY,
NAME    VARCHAR(50) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251 ,
CONSTRAINT UNIQUE_SB_MODEL UNIQUE(NAME)
);*/


/*ALTER TABLE SB_MODEL*/
/*ADD CONSTRAINT UNIQUE_SB_MODEL UNIQUE(NAME);*/

/*создаем таблицу SB_MOVE(для хранеиня изменений владельцев) с первичным ключем ID*/
/*CREATE TABLE SB_MOVE (
ID    INTEGER NOT NULL CONSTRAINT ID_SB_MOVE_PRIMARY PRIMARY KEY,
ID_SB   INTEGER NOT NULL,
ID_USER   INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*создаем таблицу SB_MOVE_PL(для хранеиня изменений местоположения) с первичным ключем ID*/
/*CREATE TABLE SB_MOVE_PL (
ID    INTEGER NOT NULL CONSTRAINT ID_SB_MOVE_PL_PRIMARY PRIMARY KEY,
ID_SB   INTEGER NOT NULL,
ID_PLACE  INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*создаем таблицу SB_STIKER(для хранеиня изменений опечатывания) с первичным ключем ID*/
/*CREATE TABLE SB_STIKER (
ID    INTEGER NOT NULL CONSTRAINT ID_SB_STIKER_PRIMARY PRIMARY KEY,
NAME    VARCHAR(6) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DTO   DATE DEFAULT CURRENT_DATE NOT NULL, /*ДАТА ОПЕЧАТЫВАНИЯ*/
/*DT_DEL    DATE, /*дата удаления/замены стикера*/
/*ID_SB INTEGER NOT NULL, /*ОПЕЧАТАННЫЙ КОМПЬЮТЕР*/
/*CONSTRAINT UNIQUE_STIKER UNIQUE(NAME)
);*/


/*ALTER TABLE SB_STIKER*/
/*ADD CONSTRAINT UNIQUE_STIKER UNIQUE(NAME);*/

/*------------------------------------*/
/*МНИ*/
/*создаем таблицу MNI с первичным ключем ID*/
/*CREATE TABLE MNI (
ID    INTEGER NOT NULL CONSTRAINT ID_MNI_PRIMARY PRIMARY KEY,
UCHETN_NOM    VARCHAR(10) CHARACTER SET WIN1251 NOT NULL,
SERIAL    VARCHAR(100) CHARACTER SET WIN1251,
MNI_KEY     TRUE_FALSE NOT NULL, /* - Признак ключевой носитель*/
/*MNI_SIZE     INTEGER DEFAULT 0 NOT NULL, /* - ОБЪЕМ НОСИТЕЛЯ В КБ*/
/*DTP   DATE DEFAULT CURRENT_DATE, /* - ДАТА поступления*/
/*DTS   DATE, /* - ДАТА списания*/
/*OBOSNOVANIE VARCHAR(255) CHARACTER SET WIN1251,  /*Обоснование списания*/
/*OTKUDA VARCHAR(255) CHARACTER SET WIN1251,  /*ОТКУДА ПОСТУПИЛ*/
/*ID_MODEL  INTEGER NOT NULL,
ID_TIP  INTEGER NOT NULL,
ID_SB   INTEGER,
ID_USER   INTEGER NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251,
CONSTRAINT UNIQUE_MNI_SERIAL UNIQUE(SERIAL),
CONSTRAINT UNIQUE_MNI_UCHETN_NOM UNIQUE(UCHETN_NOM)
);*/

/*создаем таблицу MNI_MODEL с первичным ключем ID*/
/*CREATE TABLE MNI_MODEL (
ID    INTEGER NOT NULL CONSTRAINT ID_MNI_MODEL_PRIMARY PRIMARY KEY,
NAME    VARCHAR(50) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251 ,
CONSTRAINT UNIQUE_MNI_MODEL UNIQUE(NAME)
);*/

/*создаем таблицу MNI_TIP с первичным ключем ID*/
/*CREATE TABLE MNI_TIP (
ID    INTEGER NOT NULL CONSTRAINT ID_MNI_TIP_PRIMARY PRIMARY KEY,
NAME    VARCHAR(50) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251 ,
CONSTRAINT UNIQUE_MNI_TIP UNIQUE(NAME)
);*/

/*создаем таблицу MNI_MOVE с первичным ключем ID*/
/*CREATE TABLE MNI_MOVE (
ID    INTEGER NOT NULL CONSTRAINT ID_MNI_MOVE_PRIMARY PRIMARY KEY,
ID_MNI    INTEGER NOT NULL,
ID_USER INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*создаем таблицу MNI_MOVE_SB с первичным ключем ID*/
/*CREATE TABLE MNI_MOVE_SB (
ID    INTEGER NOT NULL CONSTRAINT ID_MNI_MOVE_SB_PRIMARY PRIMARY KEY,
ID_MNI    INTEGER NOT NULL,
ID_SB INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*------------------------------------*/
/*Разное(RAZNOE)*/
/*создаем таблицу RAZNOE с первичным ключем ID*/
/*CREATE TABLE RAZNOE (
ID    INTEGER NOT NULL CONSTRAINT ID_RAZNOE_PRIMARY PRIMARY KEY,
SERIAL    VARCHAR(100) CHARACTER SET WIN1251,
INVENT    VARCHAR(15) CHARACTER SET WIN1251,
DTP DATE DEFAULT CURRENT_DATE NOT NULL,/*ДАТА ПОЛУЧЕНИЯ устройства*/
/*DTS   DATE, /* - ДАТА списания*/
/*OPISANIE VARCHAR(500) CHARACTER SET WIN1251,  /*Описание устройства*/
/*OBOSNOVANIE VARCHAR(255) CHARACTER SET WIN1251,  /*Обоснование списания*/
/*ID_MODEL  INTEGER NOT NULL,
ID_PLACE  INTEGER NOT NULL,
ID_NAME   INTEGER NOT NULL,
ID_USER   INTEGER NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251,
CONSTRAINT UNIQUE_RAZNOE_SERIAL UNIQUE(SERIAL),
CONSTRAINT UNIQUE_RAZNOE_INVENT_NOM UNIQUE(INVENT)
);*/

/*создаем таблицу RAZNOE_MODEL с первичным ключем ID*/
/*CREATE TABLE RAZNOE_MODEL (
ID    INTEGER NOT NULL CONSTRAINT ID_RAZNOE_MODEL_PRIMARY PRIMARY KEY,
NAME    VARCHAR(50) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251 ,
CONSTRAINT UNIQUE_RAZNOE_MODEL UNIQUE(NAME)
);*/

/*создаем таблицу RAZNOE_NAME с первичным ключем ID*/
/*CREATE TABLE RAZNOE_NAME (
ID    INTEGER NOT NULL CONSTRAINT ID_RAZNOE_NAME_PRIMARY PRIMARY KEY,
NAME    VARCHAR(50) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251 ,
CONSTRAINT UNIQUE_RAZNOE_NAME UNIQUE(NAME)
);*/

/*создаем таблицу RAZNOE_MOVE с первичным ключем ID*/
/*CREATE TABLE RAZNOE_MOVE (
ID    INTEGER NOT NULL CONSTRAINT ID_RAZNOE_MOVE_PRIMARY PRIMARY KEY,
ID_RAZNOE    INTEGER NOT NULL,
ID_USER INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*создаем таблицу RAZNOE_MOVE_PL с первичным ключем ID*/
/*CREATE TABLE RAZNOE_MOVE_PL (
ID    INTEGER NOT NULL CONSTRAINT ID_RAZNOE_MOVE_PL_PRIMARY PRIMARY KEY,
ID_RAZNOE    INTEGER NOT NULL,
ID_PLACE INTEGER NOT NULL,
DTM DATE DEFAULT CURRENT_DATE NOT NULL
);*/

/*---------------------------------------*/
/*создаем таблицу TASK с первичным ключем ID*/
/*CREATE TABLE TASK (
ID    INTEGER NOT NULL CONSTRAINT ID_TASK_PRIMARY PRIMARY KEY,
TXT    VARCHAR(100) CHARACTER SET WIN1251 DEFAULT '-' NOT NULL,
OPISANIE    VARCHAR(255) CHARACTER SET WIN1251 ,
DTS DATE DEFAULT CURRENT_DATE NOT NULL,
DTE DATE DEFAULT CURRENT_DATE NOT NULL,
PRE TRUE_FALSE/*,
CONSTRAINT UNIQUE_TASK_TXT UNIQUE(TXT)*/
/*);*/

/*------------------------------------*/
/*КАРТРИДЖЫ(KARTRIDJ_NAME, KARTRIDJS)*/
/*создаем таблицу KARTRIDJS с первичным ключем ID*/
/*CREATE TABLE KARTRIDJS (
ID    INTEGER NOT NULL CONSTRAINT ID_KARTRIDJS_PRIMARY PRIMARY KEY,
DT DATE DEFAULT CURRENT_DATE NOT NULL,
ID_KARTRIDJ INTEGER NOT NULL,
ID_USER  INTEGER,
COUNT_KARTRIDJ INTEGER NOT NULL,
CONSTRAINT UNIQUE_KARTRIDJS UNIQUE(DT, ID_KARTRIDJ, COUNT_KARTRIDJ)
);*/

/*создаем таблицу KARTRIDJ_NAME с первичным ключем ID*/
/*CREATE TABLE KARTRIDJ_NAME (
ID    INTEGER NOT NULL CONSTRAINT ID_KARTRIDJ_NAME_PRIMARY PRIMARY KEY,
NAME    VARCHAR(50) CHARACTER SET WIN1251 NOT NULL,
DOPOLN    VARCHAR(255) CHARACTER SET WIN1251,
CONSTRAINT UNIQUE_KARTRIDJ_NAME_NAME UNIQUE(NAME)
);*/

COMMIT;


/*Создаем таблицу со связями*/
/*CREATE TABLE ROD_SVIAZI (*/
/*ID_FROM  ID_SVIAZI DEFAULT 1 NOT NULL,*/
/*ID_TO  ID_SVIAZI DEFAULT 1 NOT NULL,*/
/*DIST  SMALLINT DEFAULT 0 NOT NULL*/
/*CONSTRAINT SVIAZI_PRIMARY PRIMARY KEY(ID_FROM,ID_TO,DIST),*/
/*CONSTRAINT FK_SVIAZI_ROD FOREIGN KEY(ID_TO) REFERENCES ROD(ID)*/
/*ON DELETE CASCADE ON UPDATE CASCADE*/
/*);*/
/*COMMIT;*/

/*первичные ключи*/
/*Добавляем первичный ключ в таблицу USERS*/
/*ALTER TABLE USERS*/
/*ADD CONSTRAINT ID_PRIMARY PRIMARY KEY(ID);*/
/*COMMIT;*/

/*Добавляем первичный ключ в таблицу ROD_SVIAZI*/
/*ALTER TABLE ROD_SVIAZI*/
/*ADD CONSTRAINT SVIAZI_PRIMARY PRIMARY KEY(ID_FROM,ID_TO,DIST);*/
/*COMMIT;*/


/*добавляем ограничение уникальности для столбцов ID_FROM, ID_TO, DIST */
/*таблицы ROD_SVIAZI*/
/*ALTER TABLE ROD_SVIAZI*/
/*ADD CONSTRAINT UN_SV_FR UNIQUE(ID_FROM, ID_TO, DIST),*/
/*COMMIT;*/



